# ============================================
# 慢查询分析系统 Supervisor 配置文件
# Gunicorn + Supervisor 生产级集成配置
# ============================================

# 使用说明：
# 1. 将此文件复制到 /etc/supervisor/conf.d/slowquery.conf
# 2. 修改下面的路径、用户名等配置为你的实际环境
# 3. 运行 sudo supervisorctl reread && sudo supervisorctl update
# 4. 运行 sudo supervisorctl start slowquery:*

[group:slowquery]
programs=slowquery-backend,slowquery-frontend

# ============================================
# 后端服务配置 (Gunicorn WSGI服务器)
# ============================================
[program:slowquery-backend]
# 使用gunicorn配置文件启动 - 请修改为你的实际路径
command=/path/to/your/slowquery-reviewer/backend/venv/bin/gunicorn -c /path/to/your/slowquery-reviewer/backend/gunicorn.conf.py app:app

# 工作目录 - 请修改为你的实际项目路径
directory=/path/to/your/slowquery-reviewer/backend

# 运行用户 - 请修改为你的实际用户名
user=your-username

# 进程管理
autostart=true
autorestart=true
autorestart=unexpected
startretries=5
startsecs=10

# 日志配置
redirect_stderr=true
stdout_logfile=/var/log/supervisor/slowquery-backend.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
stderr_logfile=/var/log/supervisor/slowquery-backend-error.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10

# 进程控制优化
stopsignal=TERM
stopwaitsecs=30
killasgroup=true
stopasgroup=true
priority=100

# 环境变量配置
environment=PATH="/path/to/your/slowquery-reviewer/backend/venv/bin:/usr/bin:/usr/local/bin",PYTHONPATH="/path/to/your/slowquery-reviewer/backend",FLASK_ENV="production",JWT_SECRET_KEY="your-jwt-secret-key",DATABASE_URL="mysql://user:pass@localhost/slowquery_db"

# ============================================
# 前端服务配置 (Vite预览服务器)
# ============================================
[program:slowquery-frontend]
# 启动命令 - 使用系统的npm
command=/usr/bin/npm run preview -- --host 0.0.0.0 --port 4173

# 工作目录 - 请修改为你的实际项目路径
directory=/path/to/your/slowquery-reviewer/frontend

# 运行用户 - 请修改为你的实际用户名
user=your-username

# 进程管理
autostart=true
autorestart=true
autorestart=unexpected
startretries=3
startsecs=10

# 日志配置
redirect_stderr=true
stdout_logfile=/var/log/supervisor/slowquery-frontend.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
stderr_logfile=/var/log/supervisor/slowquery-frontend-error.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=10

# 进程控制优化
stopsignal=TERM
stopwaitsecs=10
killasgroup=true
stopasgroup=true
priority=200

# 环境变量
# 环境变量
environment=NODE_ENV=production,PATH="/usr/bin:/usr/local/bin:%(ENV_HOME)s/.local/bin"

# ============================================
# 配置优势说明
# ============================================

# Gunicorn + Supervisor 集成优势：
# 1. 生产级性能：Gunicorn提供多工作进程、连接池等高性能特性
# 2. 进程管理：Supervisor提供自动重启、日志管理、进程监控
# 3. 优雅重载：支持零停机时间的配置重载和代码更新
# 4. 资源控制：精确控制内存使用、连接数等资源
# 5. 监控集成：详细的日志记录和性能监控钩子

# 关键配置参数说明：
# - killasgroup=true: 确保子进程也被终止
# - stopasgroup=true: 确保进程组一起停止
# - startsecs=10: 进程稳定运行10秒后认为启动成功
# - stopwaitsecs=30: 给gunicorn足够时间优雅关闭
